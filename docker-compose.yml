version: "3.8"
services:
  app:
    # build: で指定しているのはビルドコンテキストを指定します。ビルドコンテキストとは、docker buildを実行する際の現在の作業ディレクトリのことをビルドコンテキスト(build context)と呼びます。
    # Dockerfile が置かれている ./infra/php ディレクトリをビルドコンテキストとして指定します。Dockerビルドの際は Dockerfile のファイルを探すので、ファイル名の指定は不要です。
    build: ./infra/php
    # volumes: ではホスト側のディレクトリや名前付きボリュームをコンテナ側へマウントしたい時に指定します。今回はホスト側の ./backend ディレクトリをappサービスのコンテナ内 /work へマウントしてます。
    volumes:
      - ./backend:/work

  web:
    # コンテナを起動するイメージを選択
    # 今回は公式のnginxイメージをそのまま利用しています。(Dockerfileは不要)
    image: nginx:1.18-alpine

    # nginxへ外(ホスト側)からコンテナ内へアクセスさせるため公開用のポートを設定します。
    # ホスト側:コンテナ側 と設定します。
    ports:
      - 9001:80

    # ホスト側にあるディレクトリ、ファイルをコンテナ内へマウントさせています。
    volumes:
      - ./backend:/work
      - ./infra/nginx/default.conf:/etc/nginx/conf.d/default.conf

    working_dir: /work

  #
  db:
    build: ./infra/mysql
    volumes:
      - db-store:/var/lib/mysql

  # phpMyAdminコンテナを追加する
  pma:
    image: phpmyadmin/phpmyadmin:5.0.2
    environment:
      - PMA_HOST=db
      - PMA_USER=root
      - PMA_PASSWORD=secret
    ports:
      - 9081:80
    volumes:
      - pma-session-store:/sessions


volumes:
  db-store:
  pma-session-store:

